[comment encoding = UTF-8 /]
[module generateClassJUnit('http://www.example.org/efsm')]

[template public generateClassJUnit(aEFSM : EFSM){sClass: String = 'Bank'; sCard: String = '111'; sPsw: String = '123'; iBalance: Integer = 100}]

[file (aEFSM.name+'JUnit.java', false, 'UTF-8')]
import static org.junit.Assert.*;

import org.junit.Test;

public class [aEFSM.name/]JUnit {

[for (obj:Transition|aEFSM.transitions)]
  [if (obj.action <> '')]
  [if obj.event.substring(obj.event.lastIndex(' ')+1, obj.event.size()-1).toUpperFirst() = 'Card']
    [if obj.action.strstr('true') = true]
	@Test
	public void test[obj.input/]01() {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]("[sCard/]");
		assertTrue(output);
    [else]
	@Test
	public void test[obj.input/]()02 {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]("[sCard.toInteger()*2/]");
	  	assertFalse(output);
	[/if]
  [else]
    [if obj.event.substring(obj.event.lastIndex(' ')+1, obj.event.size()-1).toUpperFirst() = 'Psw']
      [if obj.action.strstr('true') = true]
	@Test
	public void test[obj.input/]01() {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]("[sPsw/]");
		assertTrue(output);
      [else]
	@Test
	public void test[obj.input/]02() {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]("[sPsw.toInteger()*2/]");
	  	assertFalse(output);
	  [/if]
    [else]
      [if obj.event.substring(obj.event.lastIndex(' ')+1, obj.event.size()-1).toUpperFirst() = 'Value']
        [if obj.action.strstr('true') = true]
	@Test
	public void test[obj.input/]01() {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]([iBalance/2/]f);
		assertTrue(output);
        [else]
	@Test
	public void test[obj.input/]02() {
		[sClass/] [sClass.toLowerFirst()/] = new [sClass/]();
		boolean output = [sClass.toLowerFirst()/].[obj.input/]([iBalance*2/]f);
	  	assertFalse(output);
	    [/if]
      [/if]
    [/if]	
  [/if]
	}
  [/if]
[/for]

[/file]
[/template]